name: publish

on:
  workflow_dispatch

jobs:

  publish:
    runs-on: ${{ matrix.os }}-latest

    env:
      PYTEST_ADDOPTS: "--color=yes"

    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout the repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        pipx install poetry
        # poetry config virtualenvs.prefer-active-python true

    - name: Install rsm-markup
      run: |
        poetry install --with dev
        poetry show

    - name: Run test suite
      run: |
        poetry run pytest -vv && poetry run pytest -vv --doctest-modules rsm && cd docs && poetry run make doctest
        
    - name: Build wheels
      run: |
        poetry build



    - name: Fix wheel name (see https://github.com/python-poetry/poetry/issues/3509)
      run: |
        ls -R dist/

    - name: Fix name (Ubuntu)
      if: matrix.os == 'ubuntu'
      run: |
        cd dist/
        cp rsm_markup-0.1.4-{*,cp`echo ${{ matrix.python-version }} | tr -d '.'`-cp`echo ${{ matrix.python-version }} | tr -d '.'`}-manylinux_2_35_x86_64.whl

    - name: Fix name (MacOS)
      if: matrix.os == 'macos'
      run: |
        cd dist/
        cp rsm_markup-0.1.4-{*,cp`echo ${{ matrix.python-version }} | tr -d '.'`-cp`echo ${{ matrix.python-version }} | tr -d '.'`}-macosx_12_0_x86_64.whl

    - name: Fix name (Windows)
      if: matrix.os == 'windows'
      run: |
        echo "hi"

    - name: Double check wheel name
      run: |
        ls -R dist/



    - name: Publish
      run: |
        poetry publish --dry-run --skip-existing
